{
  "swagger": "2.0",
  "info": {
    "title": "api/rpc_node.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/getversion": {
      "get": {
        "summary": "get chainmaker version",
        "operationId": "RpcNode_GetChainMakerVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/configChainMakerVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "RpcNode"
        ]
      }
    },
    "/v1/sendrequest": {
      "post": {
        "summary": "processing transaction message requests",
        "operationId": "RpcNode_SendRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/commonTxResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/commonTxRequest"
            }
          }
        ],
        "tags": [
          "RpcNode"
        ]
      }
    },
    "/v1/subscribe": {
      "get": {
        "summary": "processing requests for message subscription by websocket",
        "operationId": "RpcNode_SubscribeWS",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/commonSubscribeResult"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of commonSubscribeResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "rawTx",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "RpcNode"
        ]
      }
    }
  },
  "definitions": {
    "accesscontrolMember": {
      "type": "object",
      "properties": {
        "org_id": {
          "type": "string",
          "title": "organization identifier of the member"
        },
        "member_type": {
          "$ref": "#/definitions/accesscontrolMemberType",
          "title": "member type"
        },
        "member_info": {
          "type": "string",
          "format": "byte",
          "title": "member identity related info bytes"
        }
      },
      "title": "online member of blockchain"
    },
    "accesscontrolMemberType": {
      "type": "string",
      "enum": [
        "CERT",
        "CERT_HASH",
        "PUBLIC_KEY",
        "DID",
        "ALIAS",
        "ADDR"
      ],
      "default": "CERT",
      "title": "- CERT: X509 cert\n - CERT_HASH: cert hash\n - PUBLIC_KEY: public key\n - DID: did\n - ALIAS: alias\n - ADDR: address"
    },
    "commonContractEvent": {
      "type": "object",
      "properties": {
        "topic": {
          "type": "string"
        },
        "tx_id": {
          "type": "string"
        },
        "contract_name": {
          "type": "string"
        },
        "contract_version": {
          "type": "string"
        },
        "event_data": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "contract event saved in block chain"
    },
    "commonContractResult": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "title": "user contract defined return code, 0-ok, \u003e0 user define error code. for example, insufficient balance in token transfer"
        },
        "result": {
          "type": "string",
          "format": "byte",
          "title": "user contract defined result"
        },
        "message": {
          "type": "string",
          "title": "user contract defined result message"
        },
        "gas_used": {
          "type": "string",
          "format": "uint64",
          "title": "gas used by current contract(include contract call)"
        },
        "contract_event": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonContractEvent"
          },
          "title": "contract events"
        }
      },
      "title": "invoke user contract method return UserContractReturnPayload\nUnmarshal from TransactResult.TxResponse.payload"
    },
    "commonEndorsementEntry": {
      "type": "object",
      "properties": {
        "signer": {
          "$ref": "#/definitions/accesscontrolMember",
          "title": "signer"
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "title": "signature"
        }
      },
      "title": "endorsement info, including a signer and his signature"
    },
    "commonKeyValuePair": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "a k-v pair"
    },
    "commonLimit": {
      "type": "object",
      "properties": {
        "gas_limit": {
          "type": "string",
          "format": "uint64",
          "title": "gas limit"
        }
      },
      "title": "Limit defines transaction limitation, Limit as a message for easy expansion"
    },
    "commonPayload": {
      "type": "object",
      "properties": {
        "chain_id": {
          "type": "string",
          "title": "blockchain identifier"
        },
        "tx_type": {
          "$ref": "#/definitions/commonTxType",
          "title": "transaction type"
        },
        "tx_id": {
          "type": "string",
          "title": "transaction id set by sender, should be unique"
        },
        "timestamp": {
          "type": "string",
          "format": "int64",
          "title": "transaction timestamp, in unix timestamp format, seconds"
        },
        "expiration_time": {
          "type": "string",
          "format": "int64",
          "title": "expiration timestamp in unix timestamp format\nafter that the transaction is invalid if it is not included in block yet"
        },
        "contract_name": {
          "type": "string",
          "title": "smart contract name"
        },
        "method": {
          "type": "string",
          "title": "invoke method"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonKeyValuePair"
          },
          "title": "invoke parameters in k-v format"
        },
        "sequence": {
          "type": "string",
          "format": "uint64",
          "title": "sequence number, default is 0"
        },
        "limit": {
          "$ref": "#/definitions/commonLimit",
          "title": "transaction limitation"
        }
      },
      "title": "transaction payload"
    },
    "commonResult": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/commonTxStatusCode",
          "title": "response code"
        },
        "contract_result": {
          "$ref": "#/definitions/commonContractResult",
          "title": "returned data, set in smart contract"
        },
        "rw_set_hash": {
          "type": "string",
          "format": "byte",
          "title": "hash of the transaction's read-write set"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "tx result, part of a transaction in block"
    },
    "commonSubscribeResult": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "description": "when TxType == SUBSCRIBE_BLOCK_INFO, data type is pb.BlockInfo;\nwhen TxType == SUBSCRIBE_TX_INFOï¼Œdata type is pb.Transaction."
        }
      }
    },
    "commonTransaction": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/commonPayload",
          "title": "payload"
        },
        "sender": {
          "$ref": "#/definitions/commonEndorsementEntry",
          "title": "sender account and signature"
        },
        "endorsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonEndorsementEntry"
          },
          "title": "endorser accounts and signatures"
        },
        "result": {
          "$ref": "#/definitions/commonResult",
          "title": "result of the transaction"
        },
        "payer": {
          "$ref": "#/definitions/commonEndorsementEntry",
          "title": "payer account and signature"
        }
      },
      "title": "a transaction includes request and its result"
    },
    "commonTxRequest": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/commonPayload",
          "title": "payload"
        },
        "sender": {
          "$ref": "#/definitions/commonEndorsementEntry",
          "title": "sender account and sender's signature"
        },
        "endorsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonEndorsementEntry"
          },
          "title": "endorsers account and signatures"
        },
        "payer": {
          "$ref": "#/definitions/commonEndorsementEntry",
          "title": "payer account and signature"
        }
      },
      "title": "transaction request proposed by user"
    },
    "commonTxResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/commonTxStatusCode",
          "title": "response code"
        },
        "message": {
          "type": "string",
          "title": "response message"
        },
        "contract_result": {
          "$ref": "#/definitions/commonContractResult",
          "title": "returned data, set in smart contract"
        },
        "tx_id": {
          "type": "string",
          "title": "tx id of request"
        },
        "tx_timestamp": {
          "type": "string",
          "format": "int64",
          "title": "async tx mode: tx timestamp is zero\nsync tx mode: tx timestamp is TxRequest.Payload.Timestamp"
        },
        "tx_block_height": {
          "type": "string",
          "format": "uint64",
          "title": "async tx mode: tx block height is zero\nsync tx mode: tx block height is the height of block which this tx was packaged"
        }
      },
      "title": "tx request - tx response, only for RPC response"
    },
    "commonTxStatusCode": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "TIMEOUT",
        "INVALID_PARAMETER",
        "NO_PERMISSION",
        "CONTRACT_FAIL",
        "INTERNAL_ERROR",
        "INVALID_CONTRACT_TRANSACTION_TYPE",
        "INVALID_CONTRACT_PARAMETER_CONTRACT_NAME",
        "INVALID_CONTRACT_PARAMETER_METHOD",
        "INVALID_CONTRACT_PARAMETER_INIT_METHOD",
        "INVALID_CONTRACT_PARAMETER_UPGRADE_METHOD",
        "INVALID_CONTRACT_PARAMETER_BYTE_CODE",
        "INVALID_CONTRACT_PARAMETER_RUNTIME_TYPE",
        "INVALID_CONTRACT_PARAMETER_VERSION",
        "GET_FROM_TX_CONTEXT_FAILED",
        "PUT_INTO_TX_CONTEXT_FAILED",
        "CONTRACT_VERSION_EXIST_FAILED",
        "CONTRACT_VERSION_NOT_EXIST_FAILED",
        "CONTRACT_BYTE_CODE_NOT_EXIST_FAILED",
        "MARSHAL_SENDER_FAILED",
        "INVOKE_INIT_METHOD_FAILED",
        "INVOKE_UPGRADE_METHOD_FAILED",
        "CREATE_RUNTIME_INSTANCE_FAILED",
        "UNMARSHAL_CREATOR_FAILED",
        "UNMARSHAL_SENDER_FAILED",
        "GET_SENDER_PK_FAILED",
        "GET_CREATOR_PK_FAILED",
        "GET_CREATOR_FAILED",
        "GET_CREATOR_CERT_FAILED",
        "GET_SENDER_CERT_FAILED",
        "CONTRACT_FREEZE_FAILED",
        "CONTRACT_TOO_DEEP_FAILED",
        "CONTRACT_REVOKE_FAILED",
        "CONTRACT_INVOKE_METHOD_FAILED",
        "ARCHIVED_TX",
        "ARCHIVED_BLOCK",
        "GAS_BALANCE_NOT_ENOUGH_FAILED",
        "GAS_LIMIT_NOT_SET",
        "GAS_LIMIT_TOO_SMALL",
        "GET_ACCOUNT_BALANCE_FAILED",
        "PARSE_ACCOUNT_BALANCE_FAILED",
        "GET_ACCOUNT_STATUS_FAILED",
        "ACCOUNT_STATUS_FROZEN"
      ],
      "default": "SUCCESS",
      "description": "- GET_ACCOUNT_BALANCE_FAILED: add for optimized charging gas return message",
      "title": "TxStatusCode describes the tx status in tx result"
    },
    "commonTxType": {
      "type": "string",
      "enum": [
        "INVOKE_CONTRACT",
        "QUERY_CONTRACT",
        "SUBSCRIBE",
        "ARCHIVE"
      ],
      "default": "INVOKE_CONTRACT",
      "description": "- INVOKE_CONTRACT: call a pre created contract, tx included in block\n - QUERY_CONTRACT: query a pre-created  contract, tx not included in block\n - SUBSCRIBE: subscribe block info,tx info and contract info. tx not included in block\n - ARCHIVE: archive/restore block, tx not included in block",
      "title": "transaction type definition"
    },
    "configChainMakerVersionResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "0 success\n1 fail"
        },
        "message": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Response for chainmaker version"
    },
    "configCheckNewBlockChainConfigResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "0 success\n1 fail"
        },
        "message": {
          "type": "string",
          "title": "failure message"
        }
      },
      "title": "response for check new block configuration"
    },
    "configConfigKeyValue": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "a string k-v pair for config"
    },
    "configDebugConfigResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "0 success\n1 fail"
        },
        "message": {
          "type": "string",
          "title": "failure message"
        }
      },
      "title": "Rrsponse for debug configuration"
    },
    "configLogLevelsResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "title": "0 success\n1 fail"
        },
        "message": {
          "type": "string",
          "title": "failure message"
        }
      },
      "title": "response for log level"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "txpoolGetTxIdsByTypeAndStageResponse": {
      "type": "object",
      "properties": {
        "tx_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "tx id list"
        }
      },
      "title": "rpc get tx ids by type and stage response"
    },
    "txpoolGetTxsInPoolByTxIdsResponse": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonTransaction"
          },
          "title": "txs in the tx pool"
        },
        "tx_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "tx ids of txs that are not in the tx pool"
        }
      },
      "title": "rpc get txs in pool by tx ids response"
    },
    "txpoolTxPoolStatus": {
      "type": "object",
      "properties": {
        "config_tx_pool_size": {
          "type": "integer",
          "format": "int32",
          "title": "the max size of config tx pool"
        },
        "common_tx_pool_size": {
          "type": "integer",
          "format": "int32",
          "title": "the max size of common tx pool"
        },
        "config_tx_num_in_queue": {
          "type": "integer",
          "format": "int32",
          "title": "the num of config tx in queue cache"
        },
        "config_tx_num_in_pending": {
          "type": "integer",
          "format": "int32",
          "title": "the num of config tx in pending cache"
        },
        "common_tx_num_in_queue": {
          "type": "integer",
          "format": "int32",
          "title": "the num of common tx in queue cache"
        },
        "common_tx_num_in_pending": {
          "type": "integer",
          "format": "int32",
          "title": "the num of common tx in pending cache"
        }
      },
      "title": "TxPoolStatus defines txPool status"
    },
    "txpoolTxStage": {
      "type": "string",
      "enum": [
        "UNKNOWN_STAGE",
        "IN_QUEUE",
        "IN_PENDING",
        "ALL_STAGE"
      ],
      "default": "UNKNOWN_STAGE",
      "description": "- UNKNOWN_STAGE: unknown\n - IN_QUEUE: in queue\n - IN_PENDING: in pending\n - ALL_STAGE: in queue and in pending",
      "title": "TxStage is the current transaction stage"
    },
    "txpoolTxType": {
      "type": "string",
      "enum": [
        "UNKNOWN_TYPE",
        "CONFIG_TX",
        "COMMON_TX",
        "ALL_TYPE"
      ],
      "default": "UNKNOWN_TYPE",
      "description": "- UNKNOWN_TYPE: unknown\n - CONFIG_TX: config transaction\n - COMMON_TX: common transaction\n - ALL_TYPE: config and common transaction",
      "title": "TxType is the transaction type"
    }
  }
}
