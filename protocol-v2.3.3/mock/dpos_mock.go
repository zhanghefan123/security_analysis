// Code generated by MockGen. DO NOT EDIT.
// Source: dpos_interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	common "zhanghefan123/security/protobuf/pb-go/common"
	consensus "zhanghefan123/security/protobuf/pb-go/consensus"
	gomock "github.com/golang/mock/gomock"
)

// MockDPoS is a mock of DPoS interface.
type MockDPoS struct {
	ctrl     *gomock.Controller
	recorder *MockDPoSMockRecorder
}

// MockDPoSMockRecorder is the mock recorder for MockDPoS.
type MockDPoSMockRecorder struct {
	mock *MockDPoS
}

// NewMockDPoS creates a new mock instance.
func NewMockDPoS(ctrl *gomock.Controller) *MockDPoS {
	mock := &MockDPoS{ctrl: ctrl}
	mock.recorder = &MockDPoSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDPoS) EXPECT() *MockDPoSMockRecorder {
	return m.recorder
}

// CreateDPoSRWSet mocks base method.
func (m *MockDPoS) CreateDPoSRWSet(preBlkHash []byte, proposedBlock *consensus.ProposalBlock) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDPoSRWSet", preBlkHash, proposedBlock)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDPoSRWSet indicates an expected call of CreateDPoSRWSet.
func (mr *MockDPoSMockRecorder) CreateDPoSRWSet(preBlkHash, proposedBlock interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDPoSRWSet", reflect.TypeOf((*MockDPoS)(nil).CreateDPoSRWSet), preBlkHash, proposedBlock)
}

// GetValidators mocks base method.
func (m *MockDPoS) GetValidators() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValidators")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetValidators indicates an expected call of GetValidators.
func (mr *MockDPoSMockRecorder) GetValidators() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValidators", reflect.TypeOf((*MockDPoS)(nil).GetValidators))
}

// VerifyConsensusArgs mocks base method.
func (m *MockDPoS) VerifyConsensusArgs(block *common.Block, blockTxRwSet map[string]*common.TxRWSet) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyConsensusArgs", block, blockTxRwSet)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyConsensusArgs indicates an expected call of VerifyConsensusArgs.
func (mr *MockDPoSMockRecorder) VerifyConsensusArgs(block, blockTxRwSet interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyConsensusArgs", reflect.TypeOf((*MockDPoS)(nil).VerifyConsensusArgs), block, blockTxRwSet)
}
