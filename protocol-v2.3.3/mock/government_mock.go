// Code generated by MockGen. DO NOT EDIT.
// Source: government_interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	config "zhanghefan123/security/protobuf/pb-go/config"
	consensus "zhanghefan123/security/protobuf/pb-go/consensus"
	gomock "github.com/golang/mock/gomock"
)

// MockGovernment is a mock of Government interface.
type MockGovernment struct {
	ctrl     *gomock.Controller
	recorder *MockGovernmentMockRecorder
}

// MockGovernmentMockRecorder is the mock recorder for MockGovernment.
type MockGovernmentMockRecorder struct {
	mock *MockGovernment
}

// NewMockGovernment creates a new mock instance.
func NewMockGovernment(ctrl *gomock.Controller) *MockGovernment {
	mock := &MockGovernment{ctrl: ctrl}
	mock.recorder = &MockGovernmentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGovernment) EXPECT() *MockGovernmentMockRecorder {
	return m.recorder
}

// GetGovernanceContract mocks base method.
func (m *MockGovernment) GetGovernanceContract() (*consensus.GovernanceContract, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGovernanceContract")
	ret0, _ := ret[0].(*consensus.GovernanceContract)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGovernanceContract indicates an expected call of GetGovernanceContract.
func (mr *MockGovernmentMockRecorder) GetGovernanceContract() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGovernanceContract", reflect.TypeOf((*MockGovernment)(nil).GetGovernanceContract))
}

// Verify mocks base method.
func (m *MockGovernment) Verify(consensusType consensus.ConsensusType, chainConfig *config.ChainConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", consensusType, chainConfig)
	ret0, _ := ret[0].(error)
	return ret0
}

// Verify indicates an expected call of Verify.
func (mr *MockGovernmentMockRecorder) Verify(consensusType, chainConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockGovernment)(nil).Verify), consensusType, chainConfig)
}
