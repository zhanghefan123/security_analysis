// Code generated by MockGen. DO NOT EDIT.
// Source: sync_interface.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSyncService is a mock of SyncService interface.
type MockSyncService struct {
	ctrl     *gomock.Controller
	recorder *MockSyncServiceMockRecorder
}

// MockSyncServiceMockRecorder is the mock recorder for MockSyncService.
type MockSyncServiceMockRecorder struct {
	mock *MockSyncService
}

// NewMockSyncService creates a new mock instance.
func NewMockSyncService(ctrl *gomock.Controller) *MockSyncService {
	mock := &MockSyncService{ctrl: ctrl}
	mock.recorder = &MockSyncServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSyncService) EXPECT() *MockSyncServiceMockRecorder {
	return m.recorder
}

// ListenSyncToIdealHeight mocks base method.
func (m *MockSyncService) ListenSyncToIdealHeight() <-chan struct{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListenSyncToIdealHeight")
	ret0, _ := ret[0].(<-chan struct{})
	return ret0
}

// ListenSyncToIdealHeight indicates an expected call of ListenSyncToIdealHeight.
func (mr *MockSyncServiceMockRecorder) ListenSyncToIdealHeight() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListenSyncToIdealHeight", reflect.TypeOf((*MockSyncService)(nil).ListenSyncToIdealHeight))
}

// Start mocks base method.
func (m *MockSyncService) Start() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Start")
	ret0, _ := ret[0].(error)
	return ret0
}

// Start indicates an expected call of Start.
func (mr *MockSyncServiceMockRecorder) Start() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Start", reflect.TypeOf((*MockSyncService)(nil).Start))
}

// StartBlockSync mocks base method.
func (m *MockSyncService) StartBlockSync() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StartBlockSync")
}

// StartBlockSync indicates an expected call of StartBlockSync.
func (mr *MockSyncServiceMockRecorder) StartBlockSync() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartBlockSync", reflect.TypeOf((*MockSyncService)(nil).StartBlockSync))
}

// Stop mocks base method.
func (m *MockSyncService) Stop() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Stop")
}

// Stop indicates an expected call of Stop.
func (mr *MockSyncServiceMockRecorder) Stop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockSyncService)(nil).Stop))
}

// StopBlockSync mocks base method.
func (m *MockSyncService) StopBlockSync() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StopBlockSync")
}

// StopBlockSync indicates an expected call of StopBlockSync.
func (mr *MockSyncServiceMockRecorder) StopBlockSync() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StopBlockSync", reflect.TypeOf((*MockSyncService)(nil).StopBlockSync))
}
